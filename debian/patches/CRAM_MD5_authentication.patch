# HG changeset patch
# User Alexandre Fayolle <alexandre.fayolle@logilab.fr>
# Date 1288525730 -3600
# Node ID 3a64078c9af2894f91c3cf1034d743b8e10cf8e7
# Parent  dd37dc3ee804d63b0f3e1c415fcabf0dd52d7460
patch by Kim Minh Kaplan <qdsmgbm02@sneakemail.com> allowing
sb_imapfilter to use CRAM MD5 authentication (closes: #301221)

diff --git a/scripts/sb_imapfilter.py b/scripts/sb_imapfilter.py
--- a/scripts/sb_imapfilter.py
+++ b/scripts/sb_imapfilter.py
@@ -108,6 +108,7 @@ import types
 import traceback
 import email
 import email.Parser
+import hmac
 from getpass import getpass
 from email.Header import Header
 from email.Utils import parsedate
@@ -222,6 +223,14 @@ class IMAPSession(BaseIMAP):
         self._read = self.read
         self.read = self.safe_read
 
+
+    # RFC 2195
+    def authenticatecrammd5(self, username, pwd):
+        self.authenticate('CRAM-MD5',
+                          lambda (response):
+                          username + " " + hmac.HMAC(pwd, response).hexdigest())
+
+
     def login(self, username, pwd):
         try:
             BaseIMAP.login(self, username, pwd)  # superclass login
@@ -925,7 +934,10 @@ or training will be performed.
     else:
         while True:
             imap = IMAPSession(server, port, imapDebug, doExpunge)
-            imap.login(username, pwd)
+            if 'AUTH=CRAM-MD5' in imap.capabilities:
+                imap.authenticatecrammd5(username, pwd)
+            else:
+                imap.login(username, pwd)
 
             if doTrain:
                 if options["globals", "verbose"]:
